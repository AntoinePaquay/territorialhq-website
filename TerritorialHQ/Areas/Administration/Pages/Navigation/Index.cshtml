@page
@using TerritorialHQ_Library.Entities;
@model TerritorialHQ.Areas.Administration.Pages.Navigation.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Navigation</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">
        <svg class="icon" fill="none" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        Create new Menu Item
    </a>
</p>

<div>
    <table class="admin-table">
        <thead>
            <tr>
                <th style="width: 30%">Menu Item</th>
                <th style="width: 30%">Link</th>
                <th style="width: 20%">Public</th>
                <th style="width: 20%">Order</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-accordion="row">
            @{
                var i = 0;
            }
            @foreach (var item in Model.NavigationEntries.OrderBy(o => o.Order))
            {
                <tr>
                    <td>
                        <strong>@Html.DisplayFor(model => item.Name)</strong>
                    </td>
                    <td>
                        @if (item.ContentPageId != null)
                        {
                            @Html.DisplayFor(model => item.ContentPageDisplayName) <span>(Content Page)</span>
                        }
                        else if (item.ExternalUrl != null)
                        {
                            @Html.DisplayFor(model => item.ExternalUrl)
                        }
                        else
                        {
                            <span>(Not linked)</span>
                        }
                    </td>
                    <td>@Html.DisplayFor(model => item.Public)</td>
                    <td>@Html.DisplayFor(model => item.Order)</td>
                    <td style="width: 1%; white-space: nowrap">
                        <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Edit</a>
                        @if (item.SubEntries == null || item.SubEntries.Count == 0)
                        {
                            <a class="btn btn-danger btn-sm" asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                        }
                    </td>
                </tr>



                <tr style="background-color: transparent">
                    <td colspan="5" style="background-color: transparent; padding: 0 !important">
                        <table class="admin-table-alt">
                            <tbody>
                                @if (item.SubEntries != null)
                                {
                                    @foreach (var subitem in item.SubEntries.OrderBy(o => o.Order))
                                    {
                                        <tr>
                                            <td style="width: 30%">&mdash; @Html.DisplayFor(model => subitem.Name)</td>
                                            <td style="width: 30%">
                                                @if (subitem.ContentPageId != null)
                                                {
                                                    @Html.DisplayFor(model => subitem.ContentPageDisplayName) <span>(Content Page)</span>
                                                }
                                                else if (subitem.ExternalUrl != null)
                                                {
                                                    @Html.DisplayFor(model => subitem.ExternalUrl)
                                                }
                                                else
                                                {
                                                    <span>(Not linked)</span>
                                                }
                                            </td>
                                            <td style="width: 20%">@Html.DisplayFor(model => subitem.Public)</td>
                                            <td style="width: 20%">@Html.DisplayFor(model => subitem.Order)</td>
                                            <td style="width: 1%; white-space: nowrap">
                                                <a class="btn btn-primary btn-sm" asp-page="./Edit" asp-route-id="@subitem.Id">Edit</a>
                                                <a class="btn btn-danger btn-sm" asp-page="./Delete" asp-route-id="@subitem.Id">Delete</a>
                                            </td>
                                        </tr>
                                    }
                                }
                                <tr>
                                    <td colspan="5">
                                        <a asp-page="Create" asp-route-parentId="@item.Id" class="btn btn-primary btn-sm">
                                            <svg class="icon" fill="none" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                            Create Submenu Item
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>

                i++;
            }
        </tbody>
    </table>
</div>